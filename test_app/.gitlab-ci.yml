variables:
  IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  NS: default
  NAME_HELM: nginx
  SECRET: regcrednginx
  KUBE_CONTEXT: kul-rb/agent:rbagent

workflow:
    rules:
      - if: $CI_COMMIT_TAG == null
        variables:
          IMAGE_TAG: v$CI_PIPELINE_ID
      - if: $CI_COMMIT_TAG != null
        variables:
           IMAGE_TAG:  $CI_COMMIT_TAG

stages:
  - build-nginx
  - push-nginx
  - deploy-nginx

build: 
  stage: build-nginx
  tags:
    - nginx
  script:
    - docker build -t $IMAGE:$IMAGE_TAG .

push:
  stage: push-nginx
  tags:
    - nginx
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
  script:
    - docker push $IMAGE:$IMAGE_TAG

deploy:
  rules:
    - if: $CI_COMMIT_TAG != null
  stage: deploy-nginx
  tags:
    - nginx
  image:
    name: centosadmin/kubernetes-helm:3.9.4
  script:
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl delete secret $SECRET -n $NS --ignore-not-found=true
    - kubectl create secret docker-registry $SECRET --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD -n $NS
    - helm upgrade --install $NAME_HELM .helm 
        --set image=$IMAGE:$IMAGE_TAG
        --set label=$CI_COMMIT_TAG
        --debug
        --atomic
        --timeout 120s
        --namespace $NS
  
    